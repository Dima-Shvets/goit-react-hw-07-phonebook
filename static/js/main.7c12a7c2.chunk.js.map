{"version":3,"sources":["components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","redux/contacts/contacts-operations.js","redux/contacts/contacts-selector.js","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","rejectWithValue","a","get","contacts","data","addContact","newContact","post","contact","deleteContact","contactId","delete","getContacts","state","items","getFilter","filter","getIsLoading","isLoading","getIsAddingContact","isAddingContact","getError","error","getFilteredContacts","createSelector","normalizedFilter","toLocaleLowerCase","name","includes","updateFilter","createAction","nameInputId","nanoid","numberInputId","ContactForm","useState","setName","number","setNumber","useSelector","contactsSelectors","dispatch","useDispatch","inputHandler","e","target","value","reset","className","s","onSubmit","preventDefault","check","find","alert","contactsOperations","htmlFor","id","type","pattern","title","required","onChange","ariaLabel","height","width","strokeWidth","color","secondaryColor","ContactList","filteredContacts","map","element","button","onClick","filterId","Filter","label","input","message","contactsActions","App","useEffect","heigth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","fulfilled","payload","pending","rejected","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c12a7c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"ContactList_element__2i2bX\",\"button\":\"ContactList_button__1gsrr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__39c0g\",\"input\":\"Filter_input__2NZNY\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://61ec45e3f3011500174d212a.mockapi.io';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, rejectWithValue) => {\n    try {\n      const { data: contacts } = await axios.get('/contacts');\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async (newContact, rejectWithValue) => {\n    try {\n      const { data: contact } = await axios.post('/contacts', newContact);\n      return contact;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (contactId, rejectWithValue) => {\n    try {\n      await axios.delete(`/contacts/${contactId}`);\n      return contactId;\n    } catch (error) {\n      rejectWithValue(error);\n    }\n  },\n);\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getIsAddingContact = state => state.contacts.isAddingContact;\nexport const getError = state => state.contacts.error;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n// export const getFilteredContacts = state => {\n//   const contacts = getContacts(state);\n//   const filter = getFilter(state);\n//   const normalizedFilter = filter.toLocaleLowerCase();\n\n//   return contacts.filter(contact =>\n//     contact.name.toLocaleLowerCase().includes(normalizedFilter),\n//   );\n// };\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const updateFilter = createAction('contacts/updateFilter');\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport s from './ContactForm.module.scss';\n\nimport { Oval } from 'react-loader-spinner';\nimport { nanoid } from 'nanoid';\n\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const isAddingContact = useSelector(contactsSelectors.getIsAddingContact);\n\n  const dispatch = useDispatch();\n\n  const addContact = contact => {\n    const { name } = contact;\n    const check = contacts.find(contact => contact.name === name);\n\n    if (check) {\n      alert('This contact is already in the list!');\n      return;\n    }\n\n    dispatch(contactsOperations.addContact(contact));\n  };\n\n  const inputHandler = e => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    addContact({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s['contact-form']} onSubmit={submitHandler}>\n      <label htmlFor={nameInputId} className={s['name-label']}>\n        Name\n      </label>\n      <input\n        id={nameInputId}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={inputHandler}\n      />\n      <label htmlFor={numberInputId} className={s['number-label']}>\n        Number\n      </label>\n      <input\n        id={numberInputId}\n        className={s['number-input']}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n        onChange={inputHandler}\n      />\n      <button className={s['btn']} type=\"submit\">\n        Add contact\n        {isAddingContact && (\n          <Oval\n            ariaLabel=\"loading-indicator\"\n            height={12}\n            width={12}\n            strokeWidth={5}\n            color=\"black\"\n            secondaryColor=\"grey\"\n          />\n        )}\n      </button>\n    </form>\n  );\n}\n","// import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './ContactList.module.scss';\n\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\nexport default function ContactList() {\n  const filteredContacts = useSelector(contactsSelectors.getFilteredContacts);\n  const dispatch = useDispatch();\n  const deleteContact = id => dispatch(contactsOperations.deleteContact(id));\n\n  return (\n    <ul>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <li key={id} className={s.element}>\n            {name}: {number}\n            <button\n              className={s.button}\n              type=\"button\"\n              onClick={() => deleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\n// ContactList.propTypes = {\n//   filteredContacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     }),\n//   ),\n// };\n","// import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { nanoid } from 'nanoid';\nimport s from './Filter.module.scss';\n\nimport { contactsActions, contactsSelectors } from 'redux/contacts';\n\nconst filterId = nanoid();\n\nexport default function Filter() {\n  const filter = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  const updateFilter = message =>\n    dispatch(contactsActions.updateFilter(message));\n\n  const filterHandler = e => {\n    const message = e.target.value;\n    updateFilter(message);\n  };\n\n  return (\n    <>\n      <label className={s.label} htmlFor={filterId}>\n        Find contacts by name\n      </label>\n      <input\n        className={s.input}\n        id={filterId}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={filterHandler}\n      />\n    </>\n  );\n}\n\n// Filter.propTypes = {\n//   filter: PropTypes.string.isRequired,\n//   updateFilter: PropTypes.func.isRequired,\n// };\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { BallTriangle } from 'react-loader-spinner';\n\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport './common-style.scss';\nimport './App.scss';\n\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\nfunction App() {\n  const isLoading = useSelector(contactsSelectors.getIsLoading);\n  const error = useSelector(contactsSelectors.getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchContacts = () => dispatch(contactsOperations.fetchContacts());\n    fetchContacts();\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && (\n        <BallTriangle\n          heigth=\"150\"\n          width=\"150\"\n          color=\"grey\"\n          ariaLabel=\"loading-indicator\"\n        />\n      )}\n      {error && <p>404. Unable to load the contacts</p>}\n      <ContactList filteredContacts />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\nimport * as contactsActions from './contacts-actions';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from './contacts-operations';\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => {\n    return payload;\n  },\n  [addContact.fulfilled]: (state, { payload }) => {\n    return [...state, payload];\n  },\n\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [contactsActions.updateFilter]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n});\n\nconst isAddingContact = createReducer(false, {\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.pending]: () => null,\n  [fetchContacts.fulfilled]: () => null,\n  [fetchContacts.rejected]: () => true,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  isAddingContact,\n  error,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact-form\":\"ContactForm_contact-form__15rPT\",\"name-label\":\"ContactForm_name-label__33mM1\",\"number-label\":\"ContactForm_number-label__1TVWG\",\"number-input\":\"ContactForm_number-input__160zg\",\"btn\":\"ContactForm_btn__J-oP0\"};"],"sourceRoot":""}